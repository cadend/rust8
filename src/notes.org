* TODO Clean up run loop
** cpu_cycle()
** render()
** read_input()


* TODO Read bytes from memory into a display field of chip8 struct
** display: [[u8; 8]; 4]
** Handle XOR of pixels and setting of VF register in process_instruction()
* If a clear or draw instruction is executed, set draw flag in main struct
* Iterate through display array and draw rects as needed


* Major need to factor code out of c8.rs
** TODO Graphical things should go into their own mod
*** Maybe have a Display struct containing all the SDL bits and the actual display array mentioned above,
*** then have the Chip8 own a Display
** TODO Use an enum for opcodes
** TODO Use a unit struct for instructions to grab for ex. target_reg via Instruction.get_target_reg();
